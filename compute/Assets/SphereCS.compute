#pragma kernel SphereCS

float rand1dTo1d(float value, float mutator = 0.546) {
	float random = frac(sin(value + mutator) * 143758.5453);
	return random;
}

float3 rand1dTo3d(float value) {
	return float3(
		rand1dTo1d(value, 3.9812),
		rand1dTo1d(value, 7.1536),
		rand1dTo1d(value, 5.7241)
		);
}


RWStructuredBuffer<float3> Result;
uniform float Time;

[numthreads(64, 1, 1)]
void SphereCS(uint3 id : SV_DispatchThreadID)
{
	float3 baseDir = normalize(rand1dTo3d(id.x) - 0.5) * (rand1dTo1d(id.x) * 0.9 + 0.1);
	float3 orthogonal = normalize(cross(baseDir, rand1dTo3d(id.x + 7.1393) - 0.5)) * (rand1dTo1d(id.x + 3.7443) * 0.9 + 0.1);
	float scaledTime = Time * 2 + rand1dTo1d(id.x) * 712.131234;
	float3 dir = baseDir * sin(scaledTime) + orthogonal * cos(scaledTime);
	Result[id.x] = dir * 20;
}